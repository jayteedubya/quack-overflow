** legend **
- base url for all routes is /api
- all responses are given as json
- all routes marked with a $ are authenticated
- all routes marked with a - are un-authenticated

**** users - the sites user base ****

** url **
- /users

** routes **

- /:username
    GET - returns an object containing the username, bio, and title associated with :username

- /:username/questions
    GET - returns an array of all questions asked by :username

- /:username/answers
    GET - returns an array of all answers given by :username

$ /:username/bio
    PUT - inserts the bio provided on the request body into the database as {:username}'s new bio

$ /:username/title
    PUT - inserts the title provided on the request body as {:username}'s new title


**** auth - handles authentication and onboarding ****

** url **
- /auth

** routes **

- /sign-in
    POST - compares the username and password provided in the request body with that stored in the database, and assigns a json web token if they match

- /sign-up
    POST - adds a new user to the database using the data provided in the request body. expects properties username, password, bio, and title

- /check-username-availability
    GET - checks to see if the included username is available

$ /sign-out
    POST - deletes the web token associated with the username provided in the request body from both the session cookie and the database

$ /delete-account/:username
    DELETE - deletes the account associated with :username

**** questions ****

** url **
/questions

** routes **

- /?page=x
    GET - gets 25 posts according to the page number i.e. the first page will contain the 25 most recent posts, second page 26 - 50 and so on. ala reddit.

- /question/:id
    GET - gets everything necessary to construct a post page, including answers
    PUT - swaps the saved question body with the one provided in the request
    DELETE - removes a question from the database

$ /new
    POST - adds a new post to the database and returns the id of the new post for client side redirect

**** answers ****

** url **
/answers

** routes **

$ /:question_id
    POST - adds a new answer to the questions

$ /answers/:answerId
    PUT - edits an existing answer
    DELETE - deletes an existing answer

$ /answers/:answerId/POB
    PUT - increments the pob_count of the answer by 1





