{"version":3,"sources":["navigation/navbar.js","navigation/sidebar.js","postPage/answerBox.js","postPage/answerArea.js","postPage/questionArea.js","postPage/postPage.js","routing/questionRouter.js","frontPage/postbox.js","frontPage/postContainer.js","profilePage/profileNavbar.js","profilePage/userPublic.js","profilePage/userAnswers.js","profilePage/userQuestions.js","authentication/signUp.js","authentication/signIn.js","postPage/newPost.js","routing/userRouter.js","frontPage/topicPage.js","routing/topicsRouter.js","authentication/signOut.js","navigation/404.js","frontPage/topPosts.js","app.js","index.js","authentication/signIn.module.css","profilePage/userPublic.module.css","postPage/newPost.module.css","navigation/navbar.module.css","navigation/sidebar.module.css","postPage/answerBox.module.css","postPage/answerArea.module.css","postPage/questionarea.module.css","postPage/postPage.module.css","frontPage/postbox.module.css","profilePage/profileNavbar.module.css","profilePage/userAnswers.module.css","navigation/fourzerofour.module.css"],"names":["Navbar","props","state","username","error","isLoaded","className","styles","navbar","to","this","React","Component","Sidebar","topics","fetch","then","res","json","setState","catch","err","console","sidebar","style","marginTop","marginBottom","textAlign","textDecoration","map","topic","AnswerBox","toggleEdit","readOnly","buttonText","editAnswer","answerBody","document","getElementById","value","body","JSON","stringify","id","method","mode","credentials","headers","deleteAnswer","window","confirm","updateAnswers","patOnTheBack","message","buttonDisabled","answerbox","profilePage","question_id","defaultValue","author","Date","timestamp","toLocaleString","pob_count","userViewing","onClick","disabled","AnswerArea","characterCounter","charCount","length","submit","getAndValidateAnswer","questionId","answer","alert","submitbox","onInput","answers","time","QuestionArea","editQuestion","questionBody","deleteQuestion","deleted","element","questionarea","question","title","href","PostPage","response","result","postpage","userLoggedin","QuestionRouter","userLoggedIn","updateAppState","match","useRouteMatch","path","render","params","location","pathname","Postbox","postbox","url","views","PostContainer","nextPage","currentPage","questions","prevPage","pageNumber","ok","Items","post","border","marginLeft","padding","marginRight","backgroundColor","ProfileNavbar","profilenavbar","UserPublic","toggleEditTitle","titleReadOnly","titleButtonText","editTitle","toggleEditBio","bioReadOnly","bioButtonText","editBio","bio","userpublic","margin","UserAnswers","useranswers","UserQuestions","SignUp","signUp","getAndValidateFields","loggedIn","profileCreated","updatePasswordMatch","passwordMatch","updateCharCounters","usernameCharCount","titleCharCount","passwordCharCount","bioCharCount","validator","isAlphanumeric","password","isStrongPassword","signinbox","class","innerbox","for","type","name","SignIn","req","htmlFor","signIn","NewPost","redirect","postId","getAndValidateQuestion","characterCountBody","characterCountTitle","characterCountTopic","newpost","characterCounterTitle","characterCounterTopic","textcontainer","characterCounterBody","UserRouter","exact","TopicPage","TopicRouter","SignOut","signOut","log","signedOut","FourZeroFour","fourzerofour","TopPosts","App","view","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.4a167060.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './navbar.module.css'; \nimport { Link, BrowserRouter as Router } from 'react-router-dom';\n\nclass Navbar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: null,\n            error: null,\n            isLoaded: false,\n        }\n    }\n    render() {\n        const navbar = <div className={styles.navbar}>\n            <div>\n                <h1> Quack Overflow </h1>\n                    <ul>\n                        <li><Link to=\"/\"> Questions By Date </Link></li>\n                        <li><Link to=\"/top\"> Questions By Views </Link></li>\n                        <li><Link to=\"/submit\"> Ask A Question </Link></li>\n                        {!this.props.username && <li><Link to=\"/sign-in\"> Sign In </Link></li>}\n                        {!this.props.username && <li><Link to=\"/sign-up\"> Sign Up </Link></li>}\n                        {!!this.props.username && <li><Link to=\"/sign-out\"> Sign Out</Link></li>}\n                        {!!this.props.username && <li><Link to={`/users/${this.props.username}`}> {this.props.username} </Link></li>}\n                    </ul>\n            </div>\n        </div>\n        return navbar;\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport styles from './sidebar.module.css';\nimport { Link } from 'react-router-dom';\n\nclass Sidebar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {topics: []};\n    }\n    componentDidMount() {\n        fetch('/api/questions/topics')\n            .then(res => res.json())\n            .then(topics => this.setState({ topics }))\n            .catch(err => console.error(err));\n    }\n    render() {\n        return <div className={styles.sidebar}>\n            <h3 style={{marginTop: 0, marginBottom: '10px', textAlign: \"center\", textDecoration: 'underline'}}> Popular Topics </h3>\n            {this.state.topics.map(topic => <div key={topic.topic}><Link to={`/topics/${topic.topic}`}>{topic.topic}</Link><br/></div>)}\n        </div>\n    }\n}\n\n\n\nexport default Sidebar;","import React from 'react';\nimport style from './answerBox.module.css';\nimport { Link } from 'react-router-dom';\n\nclass AnswerBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {readOnly: true, buttonText: 'edit', buttonDisabled: false};\n    }\n    toggleEdit = () => {\n        this.setState(state => {\n            state.readOnly = !state.readOnly;\n            state.buttonText = state.readOnly ? 'edit' : 'submit';\n            return state;\n        })\n    }\n    editAnswer = () => {\n        if (!this.state.readOnly) {\n            const answerBody = document.getElementById('answer-body').value;\n            const body = JSON.stringify({ answerBody });\n            fetch(`/api/answers/answer/${this.props.id}`, {method: 'PUT', body, mode: 'cors', credentials: 'include', headers: {'Content-Type': 'application/json'}})\n                .then(res => res.json())\n                .catch(err => console.error(err));\n            this.toggleEdit(); \n            return;\n        }\n        this.toggleEdit();\n        return;\n    }\n\n    deleteAnswer = () => {\n        const confirmation = window.confirm('are you sure you want to delete this answer?')\n        if (confirmation) {\n            fetch(`/api/answers/answer/${this.props.id}`, {method: 'DELETE', mode: 'cors', credentials: 'include', headers: {'Content-Type': 'application/json'}})\n                .then(res => res.json())\n                .then(() => this.props.updateAnswers())\n                .catch(err => console.error(err));\n                \n        }\n    }\n    patOnTheBack = () => {\n        fetch(`/api/answers/answer/${this.props.id}/POB`,{method: 'PUT', credentials: 'include'})\n            .then(res => res.json())\n            .then(res => {\n                if (res.message === 'post successfully POB\\'d' || res.error === 'user has already patted post in the back!') {\n                    this.setState({buttonDisabled: true});\n                }\n            })\n    }\n    render() {\n        const element = \n        <div className={style.answerbox}>\n            {this.props.profilePage && <Link to={`/questions/${this.props.question_id}`}>original question</Link>}\n            <textarea readOnly={this.state.readOnly} defaultValue={this.props.body} id=\"answer-body\"></textarea>\n            <br/>\n            <p><strong>author: </strong><Link to={`/users/${this.props.author}`}>{this.props.author}</Link>    <strong>timestamp: </strong> {new Date(this.props.timestamp).toLocaleString()}    <strong>Patted on the back </strong>{`${this.props.pob_count}`}<strong> times</strong></p>\n            {this.props.userViewing === this.props.author && <span><button onClick={this.editAnswer}>{this.state.buttonText}</button><button onClick={this.deleteAnswer}>delete</button></span>}\n            {!!this.props.userViewing && <button onClick={this.patOnTheBack} disabled={this.state.buttonDisabled}>pat 'em on the back</button>}\n        </div>\n        return element;\n    }\n}\n\nexport default AnswerBox;","import React from 'react';\nimport AnswerBox from './answerBox';\nimport style from './answerArea.module.css';\n\nclass AnswerArea extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {charCount: 0}\n    }\n    getAndValidateAnswer() {\n        const answer = document.getElementById('new-comment').value;\n        if (answer.length > 600) {\n            window.alert('answer must be 600 characters or less');\n            return null;\n        }\n        return answer;\n    }\n    characterCounter = () => {\n        this.setState({charCount: document.getElementById('new-comment').value.length});\n    }\n    submit = () => {\n        const answerBody = this.getAndValidateAnswer();\n        if (!answerBody) {\n            return;\n        }\n        document.getElementById('new-comment').value = '';\n        const body = JSON.stringify({ answerBody });\n        fetch(`/api/answers/${this.props.questionId}`, {method: 'POST', body, mode: 'cors', credentials: 'include', headers: {'Content-Type': 'application/json'}})\n            .then(() => this.props.updateAnswers())\n            .catch(err => console.error(err));\n    }\n    render() {\n        const element = <div>\n                    {this.props.username && <div className={style.submitbox}>\n                        <h3>Answer The Question!</h3>\n                        <textarea onInput={this.characterCounter} id=\"new-comment\"></textarea>\n                        <br/>\n                        <span><p>{this.state.charCount} / 600 characters</p></span>\n                        <button onClick={this.submit}> submit </button>\n                    </div>}\n                {this.props.answers.map(answer => <AnswerBox updateAnswers={this.props.updateAnswers} id={answer.id} key={answer.id} author={answer.author} userViewing={this.props.username} pob_count={answer.pob_count} body={answer.body} timestamp={answer.time}></AnswerBox>)}\n            </div>\n        return element;\n    }\n}\n\nexport default AnswerArea;","import React from 'react';\nimport { Redirect } from 'react-router';\nimport style from './questionarea.module.css';\n\nclass QuestionArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {readOnly: true, buttonText: 'edit', deleted: false}\n    }\n    toggleEdit = () => {\n        this.setState(state => {\n            state.readOnly = !state.readOnly;\n            state.buttonText = state.readOnly ? 'edit' : 'submit';\n            return state;\n        })\n    }\n    editQuestion = () => {\n        if (!this.state.readOnly) {\n            const questionBody = document.getElementById('question-body').value;\n            const body = JSON.stringify({ questionBody });\n            fetch(`/api/questions/question/${this.props.id}`, {method: 'PUT', body, credentials: 'include', headers: {'Content-Type': 'application/json'}})\n                .then(res => res.json())\n                .catch(err => console.error(err));\n            this.toggleEdit(); \n            return;\n        }\n        this.toggleEdit();\n        return;\n    }\n    deleteQuestion = () => {\n        const confirmation = window.confirm('are you sure you want to delete this question?')\n        if (confirmation) {\n            fetch(`/api/questions/question/${this.props.id}`, {method: 'DELETE', mode: 'cors', credentials: 'include', headers: {'Content-Type': 'application/json'}})\n                .then(res => res.json())\n                .then(() => this.setState({deleted: true}))\n                .catch(err => console.error(err));\n        }\n    }\n    render() {\n        const element = <div className={style.questionarea}>\n            <h1>{this.props.question.title}</h1>\n            <textarea id=\"question-body\" readOnly={this.state.readOnly} defaultValue={this.props.question.body}></textarea>\n            <br/>\n            <p><strong>author: </strong>{this.props.question.author}<a href=\"/profile\">{this.props.author}</a> <strong>timestamp: </strong> {new Date(this.props.question.time).toLocaleString()}</p>\n            {this.props.username === this.props.question.author && <div><button onClick={this.editQuestion}>{this.state.buttonText}</button><button onClick={this.deleteQuestion}>delete</button></div>}\n        </div>\n        if (this.state.deleted) {\n            return <Redirect to=\"/\"/>\n        }\n        return element;\n    }\n}\n\nexport default QuestionArea;","import React from 'react';\nimport AnswerArea from './answerArea';\nimport QuestionArea from './questionArea';\nimport style from './postPage.module.css';\nimport { Redirect } from 'react-router';\n\nclass PostPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            question: {},\n            answers: []\n        }\n    }\n    updateAnswers = () => {\n        fetch(`/api/questions/question/${this.props.id}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => response.json())\n            .then(result => {\n                this.setState({isLoaded: true, question: result.question, answers: result.answers});\n            })\n            .catch(err => console.error(err));\n    }\n    componentDidMount() {\n        fetch(`/api/questions/question/${this.props.id}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => response.json())\n            .then(result => {\n                this.setState({isLoaded: true, question: result.question, answers: result.answers});\n            })\n            .catch(err => console.error(err));\n    }\n    render() {\n        let element = <div><Redirect to=\"/404\"/></div>\n        if (this.state.question) {\n        element = <div className={style.postpage}>\n            <QuestionArea id={this.props.id} username={this.props.username} question={this.state.question}></QuestionArea>\n            <AnswerArea username={this.props.username} userLoggedin={this.props.userLoggedin} questionId={this.props.id} answers={this.state.answers} updateAnswers={this.updateAnswers}></AnswerArea>\n        </div>\n        }\n        return element;\n    }\n}\n\nexport default PostPage;","\n/*import PostPage from'../postPage/postPage';\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter, Route } from \"react-router\";\n \nclass QuestionRouter extends React.Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  };\n  render() {\n    const { location } = this.props;\n    return <Route><PostPage id={location.pathname.split('/').pop()} username={this.props.username} userLoggedIn={this.props.userLoggedIn}/></Route>\n  }\n}\n\nexport default withRouter(QuestionRouter);*/\n\nimport React from 'react';\nimport {\n    Switch,\n    Route,\n    useRouteMatch\n  } from \"react-router-dom\";\nimport PostPage from '../postPage/postPage';\n  \n\nconst QuestionRouter = ({ userLoggedIn, username, updateAppState }) => {\n  let match = useRouteMatch();\n  const element = <Switch>\n      <Route path={`${match.path}/:id`} render={props => <PostPage username={username} updateAppState={updateAppState} key={window.location.pathname} id={props.match.params.id}/>}/>\n  </Switch>\n  return element\n}\n\n  export default QuestionRouter;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './postbox.module.css'; \n\nclass Postbox extends React.Component {\n    render() {\n        const box = <div className={styles.postbox}>\n            <div>\n            <h3><Link to={this.props.url}>{this.props.title}</Link></h3>\n            <p><strong>author:</strong> {this.props.author}</p>\n            <p><strong>timestamp:</strong> {this.props.timestamp}</p>\n            <p><strong>views:</strong> {this.props.views}</p>\n        </div>\n        </div>\n        return box;\n    }\n}\n\nexport default Postbox;","import React from 'react';\nimport Postbox from './postbox';\nimport { Link } from 'react-router-dom';\n\nclass PostContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            questions: [],\n            currentPage: 0,\n            ok: true\n        }\n    }\n    componentDidMount() {\n        fetch(`/api/questions?page=${this.state.currentPage}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => {\n                this.setState({ok: response.ok})\n                return response;\n            })\n            .then(response => response.json())\n            .then(result => {\n                this.setState({isLoaded: true, questions: result});\n            })\n            .catch(err => console.error(err));\n    }\n    nextPage = () => {\n        this.setState({currentPage: this.state.currentPage + 1});\n        fetch(`/api/questions?page=${this.state.currentPage}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => response.json())\n            .then(result => {\n                this.setState({isLoaded: true, questions: result});\n            })\n            .catch(err => console.error(err));\n        \n    }\n    prevPage = () => {\n        if (this.state.pageNumber - 1 >= 0) {\n            this.setState({currentPage: this.state.currentPage - 1});\n            fetch(`/api/questions?page=${this.state.currentPage}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n                .then(response => response.json())\n                .then(result => {\n                    if (result.error) {\n                        this.setState({error: result.error, isLoaded: true});\n                    }\n                    this.setState({isLoaded: true, questions: result});\n                });\n        }\n        return;\n    }\n    render() {\n        let Items;\n        if (this.state.isLoaded && !this.state.error) {\n            try {\n                Items = this.state.questions.map(post => //use css to give this a class with margin 170px\n                <Postbox key = {post.id} url={`/questions/${post.id}`} author={post.author} timestamp={new Date(post.time).toLocaleString()} views={post.views} title={post.title}/>\n            );\n            }\n            catch (err) {\n                return <div style={{textAlign: 'center', border: '1px solid black', marginLeft: '170px', padding: '5%', marginRight: '10px', backgroundColor: 'rgb(150, 150, 150)'}}>\n                    <h1> No posts have been made yet!</h1>\n                    <h3> You should really do something about that </h3>\n                    <h6> please... </h6>\n                    <Link to=\"/submit\"> Make a Post</Link>\n                </div>\n            }\n        }\n        if (this.state.isLoaded && this.state.error) {\n            Items = <div style={{textAlign: 'center', border: '1px solid black', marginLeft: '170px', padding: '5%', marginRight: '10px', backgroundColor: 'rgb(150, 150, 150)'}}>\n                <h1> No posts have been made yet!</h1>\n                <h3> You should really do something about that </h3>\n                <h6> please... </h6>\n                <Link to=\"/submit\"> Make a Post</Link>\n            </div>\n        }\n        return <div>\n            {Items}\n            {this.state.questions.length > 24 && <button style={{'margin-left': '170px'}} onClick={this.nextPage}> next page </button>}\n        </div>\n    }\n}\n\nexport default PostContainer;","import React from 'react';\nimport style from './profileNavbar.module.css';\nimport { Link } from 'react-router-dom';\n\nclass ProfileNavbar extends React.Component {\n    render() {\n        const element = <ul className={style.profilenavbar}>\n            <li><h3>{this.props.username}</h3></li>\n            <li><Link to={`/users/${this.props.username}/questions`}>Questions</Link></li>\n            <li><Link to={`/users/${this.props.username}/answers`}>Answers</Link></li>\n            <li><Link to={`/users/${this.props.username}`}>About me</Link></li>\n        </ul>\n        return element;\n    }\n}\n\nexport default ProfileNavbar;","import React from 'react';\nimport { Redirect } from 'react-router';\nimport ProfileNavbar from './profileNavbar';\nimport style from './userPublic.module.css';\n\nclass UserPublic extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            titleReadOnly: true,\n            bioReadOnly: true,\n            bioButtonText: 'edit', \n            titleButtonText: 'edit', \n            title: null, \n            bio: null, \n            isLoaded: false\n        }\n    }\n    componentDidMount() {\n        fetch(`/api/users/${this.props.match.params.username}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => response.json())\n            .then(result => {\n                const { bio, title } = result\n                this.setState({isLoaded: true, bio, title});\n            })\n            .catch(err => console.error(err));\n    }\n    toggleEditTitle = () => {\n        this.setState(state => {\n            state.titleReadOnly = !state.titleReadOnly;\n            state.titleButtonText = state.titleReadOnly ? 'edit' : 'submit';\n            return state;\n        })\n    }\n    editTitle = () => {\n        if (!this.state.titleReadOnly) {\n            const title = document.getElementById('title').value;\n            const body = JSON.stringify({ title });\n            fetch(`/api/users/${this.props.match.params.username}/title`, {method: 'PUT', body, mode: 'cors', credentials: 'include', headers: {'Content-Type': 'application/json'}})\n                .then(res => res.json())\n                .catch(err => console.error(err));\n            this.toggleEditTitle(); \n            return;\n        }\n        this.toggleEditTitle();\n        return;\n    }\n    toggleEditBio = () => {\n        this.setState(state => {\n            state.bioReadOnly = !state.bioReadOnly;\n            state.bioButtonText = state.bioReadOnly ? 'edit' : 'submit';\n            return state;\n        })\n    }\n    editBio = () => {\n        if (!this.state.bioReadOnly) {\n            const bio = document.getElementById('bio').value;\n            const body = JSON.stringify({ bio });\n            fetch(`/api/users/${this.props.match.params.username}/bio`, {method: 'PUT', body, mode: 'cors', credentials: 'include', headers: {'Content-Type': 'application/json'}})\n                .then(res => res.json())\n                .catch(err => console.error(err));\n            this.toggleEditBio(); \n            return;\n        }\n        this.toggleEditBio();\n        return;\n    }\n    render() {\n        var element = <div>\n            <ProfileNavbar username={this.props.match.params.username}/>\n            <div className={style.userpublic}>\n                <div className={style.title}>\n                    <h3 style={{margin: 0}}> title </h3>\n                    <textarea id=\"title\" readOnly={this.state.titleReadOnly} defaultValue={this.state.title}></textarea>\n                    {this.props.userViewing === this.props.match.params.username && <button onClick={this.editTitle}>{this.state.titleButtonText}</button>}\n                </div>\n                <div className={style.bio}>\n                    <h3 style={{margin: 0}}> bio </h3>\n                    <textarea id=\"bio\" readOnly={this.state.bioReadOnly} defaultValue={this.state.bio}></textarea>\n                    {this.props.userViewing === this.props.match.params.username && <button onClick={this.editBio}>{this.state.bioButtonText}</button>}\n                </div>\n            </div>\n        </div>\n        if (!this.state.bio && this.state.isLoaded) {\n            element = <div><Redirect to=\"/404\"/></div>\n        }\n        return element;\n    }\n}\n\nexport default UserPublic;","import React from 'react';\nimport AnswerBox from '../postPage/answerBox';\nimport ProfileNavbar from './profileNavbar';\nimport style from './userAnswers.module.css';\nimport { Redirect } from 'react-router-dom'\n\nclass UserAnswers extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            answers: [],\n            error: null,\n            isLoaded: false,\n            ok: true\n        }\n    }\n    updateAnswers = () => {\n        fetch(`/api/users/${this.props.username}/answers`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => {\n                this.setState({ok: response.ok});\n                return response;\n            })\n            .then(response => response.json())\n            .then(result => {\n                this.setState({isLoaded: true, answers: result.answers});\n            })\n            .catch(err => console.error(err));\n        }\n    componentDidMount() {\n        fetch(`/api/users/${this.props.username}/answers`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => {\n                this.setState({ok: response.ok});\n                return response;\n            })\n            .then(response => response.json())\n            .then(response => this.setState({isLoaded: true, answers: response}, error=> this.setState({isLoaded: true, error})));\n    }\n    render() {\n        var element = <div>\n            <ProfileNavbar username={this.props.username}/>\n                <div className={style.useranswers}>\n                {this.state.answers.map(answer => <AnswerBox profilePage updateAnswers={this.props.updateAnswers} userViewing={this.props.userViewing} question_id={answer.question_id} id={answer.id} key={answer.id} author={answer.author} pob_count={answer.pob_count} body={answer.body} timestamp={answer.time}></AnswerBox>)}\n                </div>\n            </div>\n        if (!this.state.ok) {\n            element = <div><Redirect to=\"/404\"/></div>\n        }\n        return element;\n    }\n}\n\nexport default UserAnswers;","\nimport React from 'react';\nimport Postbox from '../frontPage/postbox';\nimport ProfileNavbar from './profileNavbar';\nimport { Redirect } from 'react-router-dom';\n\nclass UserQuestions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            questions: [],\n            error: null,\n            isLoaded: false,\n            ok: true\n        }\n    }\n    componentDidMount() {\n        fetch(`/api/users/${this.props.username}/questions`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => {\n                this.setState({ok: response.ok});\n                return response;\n            })\n            .then(response => response.json())\n            .then(response => this.setState({questions: response, isLoaded: true}), error => this.setState({error, isLoaded: true}));\n    }\n    render() {\n    let element = <div>\n        <ProfileNavbar username={this.props.username}/>\n            <div>\n                {this.state.questions.map(post => <Postbox url={`/questions/${post.id}`} author={post.username} timestamp={post.time} views={post.views} title={post.title}></Postbox>)}\n            </div>\n        </div>\n    if (!this.state.ok) {\n        element = <div><Redirect to=\"/404\"/></div>\n    }\n    return element;\n    }\n}\n\nexport default UserQuestions;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport validator from 'validator';\nimport style from './signIn.module.css';\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loggedIn: false, \n            profileCreated: false,\n            usernameCharCount: 0, \n            passwordCharCount: 0, \n            titleCharCount: 0,\n            bioCharCount: 0,\n            passwordMatch: false\n        }\n    }\n    getAndValidateFields() {\n        const username = document.getElementById('username').value;\n        if (!validator.isAlphanumeric(username) || username.length > 40) {\n            window.alert('username must be alpha numeric and less than 40 characters or less in length');\n            document.getElementById('username').value = '';\n            return null;\n        }\n        const password = document.getElementById('password').value;\n        if (!validator.isStrongPassword(password) || password.length > 40) {\n            window.alert('password must contain a capital letter, a lowercase letter, a number, and a symbol and must be between 8 and 41 characters long');\n            document.getElementById('password').value = '';\n            return null;\n        }\n        const confirmPassword = document.getElementById('confirm-password').value\n        if (password !== confirmPassword) {\n            window.alert('password and confirm password must match');\n            document.getElementById('password').value = '';\n            document.getElementById('confirm-password').value = '';\n            return null;\n        }\n        const title = document.getElementById('title').value;\n        if (!validator.isAlphanumeric(title) && title.length > 60) {\n            window.alert('title must not be more than 60 characters in length and must be alphanumeric');\n            document.getElementById('title').value = '';\n            return null;\n        }\n        const bio = document.getElementById('bio').value;\n        if (bio.length > 300) {\n            window.alert('bio must not be longer than 300 characters in length');\n            return null;\n        }\n\n        return { username, password, title, bio };\n    }\n    signUp = () => {\n        const body = this.getAndValidateFields();\n        if (!body) {\n            return null;\n        }\n        fetch('/api/auth/sign-up', {method: 'POST', credentials: 'include', headers: {'content-type': 'application/json'}, body: JSON.stringify(body)})\n            .then(res => res.json())\n            .then(res => {\n                if (res.message && res.message === 'profile created!') {\n                    this.setState({loggedIn: true, profileCreated: true});\n                    this.props.updateAppState({ username: body.username });\n                }\n                if (res.error && res.error === 'username already taken') {\n                    window.alert('that username is already taken');\n                    document.getElementById('username').value = '';\n                }\n            });\n    }\n    updatePasswordMatch = () => {\n        const passwordMatch = document.getElementById('password').value === document.getElementById('confirm-password').value ? 'passwords match!' : 'passwords do not match'\n        this.setState({ passwordMatch })\n    }\n    updateCharCounters = () => {\n        this.setState(\n            {\n                usernameCharCount: document.getElementById('username').value.length, \n                titleCharCount: document.getElementById('title').value.length, \n                passwordCharCount: document.getElementById('password').value.length, \n                bioCharCount: document.getElementById('bio').value.length,\n            })\n    }\n    render() {\n        const element = <div className={style.signinbox}>\n            <div class={style.innerbox}>\n                <h1> Sign Up For Quack Overflow! </h1>\n                <label for=\"username\"> username </label>\n                <span><input onInput={this.updateCharCounters} type=\"text\" id=\"username\" name=\"username\"/><p>{this.state.usernameCharCount} / 40 characters</p></span>\n                <label for=\"title\"> title </label>\n                <span><input onInput={this.updateCharCounters} type=\"text\" name=\"title\" id=\"title\"></input><p>{this.state.titleCharCount} / 80 characters</p></span>\n                <label for=\"password\"> password </label>\n                <span><input onInput={this.updateCharCounters} type=\"password\" id=\"password\" name=\"password\"/><p>{this.state.passwordCharCount} / 40 characters</p></span>\n                <label for=\"confirm-password\"> confirm password </label>\n                <span><input onInput={this.updatePasswordMatch} type=\"password\" id=\"confirm-password\" name=\"confirm-password\"></input><p>{this.state.passwordMatch}</p></span>\n                <label for=\"bio\"> bio </label>\n                <span><textarea onInput={this.updateCharCounters} id=\"bio\" name=\"bio\"></textarea><p>{this.state.bioCharCount} / 300 characters</p></span>\n                <button onClick={this.signUp}> Sign Up! </button>\n            </div>\n        </div>\n        if (this.state.loggedIn) {\n            return <Redirect to=\"/\"/>\n        }\n        return element\n    }\n}\n\nexport default SignUp;","import React from 'react';\nimport style from './signIn.module.css';\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {loggedIn: false}\n    }\n    signIn() {\n        const username = document.getElementById('username').value\n        const password = document.getElementById('password').value\n        const req = {\n            method: 'POST',\n            credentials: 'include',      //IMPORTANT! if this is not here, the credentials will not be able to be used in requests, always include credentials\n            headers: {'content-type': 'application/json'},\n            body: JSON.stringify({\n                username,\n                password\n            })\n        }\n        fetch('/api/auth/sign-in', req)\n            .then(res => res.json())\n            .then(res => {\n                if (res.message === 'log in success') {\n                    this.setState({loggedIn: true});\n                    this.props.updateAppState({username});  \n                }\n            });\n        \n    }\n    render() { //DO NOT update state in render method. will call itself recursively\n        const element = <div className={style.signinbox}>\n            <div className={style.innerbox}>\n                <h1> Sign In To Quack Overflow! </h1>\n                <label htmlFor=\"username\"> username </label>\n                <input type=\"text\" id=\"username\" name=\"username\"/>\n                <br/>\n                <label htmlFor=\"password\"> password </label>\n                <input type=\"password\" id=\"password\" name=\"password\"/>\n                <br/>\n                <button onClick={()=>this.signIn()}> Sign In </button>\n            </div>\n        </div>\n        if (this.state.loggedIn) {\n            return <Redirect to=\"/\"/>\n        }\n        return element\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport style from './newPost.module.css';\nimport { Redirect } from 'react-router-dom';\nimport validator from 'validator';\n\nclass NewPost extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {postId: null, characterCountBody: 0, characterCountTitle: 0, characterCountTopic: 0};\n    }\n    redirect = (postId) => {\n        this.setState({postId})\n    }\n    getAndValidateQuestion() {\n        const title = document.getElementById('title').value;\n        if (title.length > 80) {\n            window.alert('title must be 80 characters or less');\n            return null\n        }\n        const topic = document.getElementById('topic').value;\n        if (topic.length > 60) {\n            window.alert('topic must be 60 characters or less');\n            return null;\n        }\n        const questionBody = document.getElementById('body').value;\n        if (questionBody.length > 1000) {\n            window.alert('topic must be 1000 characters or less');\n            return null;\n        }\n        return { title, topic, questionBody };\n    }\n    submit = () => {\n        const questionBody = this.getAndValidateQuestion();\n        if (!questionBody) {\n            return\n        }\n        const body = JSON.stringify(questionBody);\n        fetch('api/questions/new', {method: 'POST', body, mode: 'cors', credentials: 'include', headers: {'Content-Type': 'application/json'}})\n            .then(res => res.json())\n            .then(res => {\n                this.redirect(res.id.id);\n            })\n            .catch(err => console.error(err)) //credentials: 'same-origin' maybe //HTTP BEFORE localhost //api route\n    }\n    characterCounterTitle() {\n        this.setState({characterCountTitle: document.getElementById('title').value.length});\n    } //consider changing to one function that updates all three at once.\n    characterCounterTopic() {\n        this.setState({characterCountTopic: document.getElementById('topic').value.length});\n    }\n    characterCounterBody() {\n        this.setState({characterCountBody: document.getElementById('body').value.length});\n    }\n    render() {\n        const element = <div className={style.newpost}>\n            <label for=\"title\"> title </label>\n            <br/>\n            <input onInput={() => this.characterCounterTitle()} type=\"text\" name=\"title\" id=\"title\"></input>\n            <p>{this.state.characterCountTitle} / 80 characters</p>\n            <br/>\n            <label for=\"topic\"> topic </label>\n            <br/>\n            <input onInput={() => this.characterCounterTopic()} type=\"text\" name=\"topic\" id=\"topic\"></input>\n            <p>{this.state.characterCountTopic} / 60 characters</p>\n            <br/>\n            <div className={style.textcontainer}>\n                <textarea onInput={() => this.characterCounterBody()} id=\"body\"></textarea>\n                <br/>\n                <p>{this.state.characterCountBody} / 1000 characters</p>\n                <button onClick={this.submit}> submit </button>\n            </div>\n        </div>\n        if (this.state.postId) {\n            return <Redirect to={`/questions/${this.state.postId}`}/>\n        }\n        if (!this.props.username) {\n            return <Redirect to='/sign-in'/>\n        }\n        return element;\n    }\n}\n\nexport default NewPost;","import React from 'react';\nimport UserPublic from '../profilePage/userPublic';\nimport UserQuestions from '../profilePage/userQuestions';\nimport UserAnswers from '../profilePage/userAnswers';\nimport {\n    Switch,\n    Route,\n    useRouteMatch\n  } from \"react-router-dom\";\n  \n\n  const UserRouter = ({ userViewing }) => {\n    let match = useRouteMatch();\n    const element = <Switch>\n        <Route path={`${match.path}/:username`} exact render={props => <UserPublic {...props} userViewing={userViewing}/>}/>\n        <Route path={`${match.path}/:username/questions/`} render={props => <UserQuestions userViewing={userViewing} username={props.match.params.username}/>}/>\n        <Route path={`${match.path}/:username/answers/`} render={props => <UserAnswers userViewing={userViewing} username={props.match.params.username}/>}/>\n    </Switch>\n    return element\n  }\n\n  export default UserRouter;","import React from 'react';\nimport Postbox from './postbox';\nimport { Link } from 'react-router-dom';\n\nclass TopicPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            questions: [],\n            currentPage: 0\n        }\n    }\n    componentDidMount() {\n        fetch(`/api/questions/topics/${this.props.topic}?page=${this.state.currentPage}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => {\n                return response;\n            })\n            .then(response => response.json())\n            .then(result => {\n                this.setState({isLoaded: true, questions: result});\n            })\n            .catch(err => console.error(err));\n    }\n    nextPage = () => {\n        this.setState({currentPage: this.state.currentPage + 1});\n        fetch(`/api/questions/topics/${this.props.topic}?page=${this.state.currentPage}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => response.json())\n            .then(result => {\n                this.setState({isLoaded: true, questions: result});\n            })\n            .catch(err => console.error(err));\n        \n    }\n    prevPage = () => {\n        if (this.state.pageNumber - 1 >= 0) {\n            this.setState({currentPage: this.state.currentPage - 1});\n            fetch(`/api/questions/topics/${this.props.topic}?page=${this.state.currentPage}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n                .then(response => response.json())\n                .then(result => {\n                    this.setState({isLoaded: true, questions: result});\n                })\n                .catch(err => console.error(err));\n                return;\n        }\n        return;\n    }\n    render() {\n        let Items = <div style={{textAlign: 'center', border: '1px solid black', marginLeft: '170px', padding: '5%', marginRight: '10px', backgroundColor: 'rgb(150, 150, 150)'}}>\n            <h1> No posts in this topic have been made yet!</h1>\n            <h3> You should really do something about that </h3>\n            <h6> please... </h6>\n            <Link to=\"/submit\"> Make a Post</Link>\n        </div>\n        if (this.state.questions.length > 0) {\n            Items = this.state.questions.map(post => //use css to give this a class with margin 170px\n                <Postbox key = {post.id} url={`/questions/${post.id}`} author={post.author} timestamp={new Date(post.time).toLocaleString()} views={post.views} title={post.title}/>\n            );\n        }\n        return <div>\n            {Items}\n            {Items.length > 24 && <button style={{'margin-left': '170px'}} onClick={this.nextPage}> next page </button>}\n        </div>\n    }\n}\n\nexport default TopicPage;","import React from 'react';\nimport TopicPage from '../frontPage/topicPage';\nimport {\n    Switch,\n    Route,\n    useRouteMatch\n  } from \"react-router-dom\";\n  \n\n  const TopicRouter = () => {\n    let match = useRouteMatch();\n    const element = <Switch>\n        <Route path={`${match.path}/:topic`} render={props => <TopicPage key={window.location.pathname} topic={props.match.params.topic}/>}/>\n    </Switch>\n    return element\n  }\n\n  export default TopicRouter;","import React from 'react';\nimport { Redirect } from 'react-router';\n\nclass SignOut extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {signedOut: false}\n    }\n    componentDidMount() {\n        this.signOut();\n        this.setState({signedOut: true});\n        this.props.updateAppState({username: null});\n    }\n    signOut = () => {\n        fetch('/api/auth/sign-out', {method: 'POST', credentials: 'include'})\n       .catch(err => console.log(err));\n    }\n    render() {\n        if (this.state.signedOut) {\n            return <Redirect to=\"/\"/>\n        }\n        return <div> ERROR: for some reason, you were unable to be logged out </div>\n    }\n}\n\nexport default SignOut;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport style from './fourzerofour.module.css';\n\nclass FourZeroFour extends React.Component {\n    render() {\n        const element = <div>\n            <div className={style.fourzerofour}>\n                <h1> Cant find anything here </h1>\n                <h3> you should look somewhere else </h3>\n                <h6> please... </h6>\n                <Link to=\"/\"> Home </Link>\n            </div>\n        </div>\n        return element\n    }\n}\n\nexport default FourZeroFour;","import React from 'react';\nimport Postbox from './postbox';\nimport { Link } from 'react-router-dom';\n\nclass TopPosts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            questions: [],\n            currentPage: 0,\n            ok: true\n        }\n    }\n    componentDidMount() {\n        fetch(`/api/questions/top?page=${this.state.currentPage}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => {\n                this.setState({ok: response.ok})\n                return response;\n            })\n            .then(response => response.json())\n            .then(result => {\n                console.log(result);\n                this.setState({isLoaded: true, questions: result});\n            })\n            .catch(err => console.error(err));\n    }\n    nextPage = () => {\n        this.setState({currentPage: this.state.currentPage + 1});\n        fetch(`/api/questions/top?page=${this.state.currentPage}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n            .then(response => response.json())\n            .then(result => {\n                this.setState({isLoaded: true, questions: result});\n            })\n            .catch(err => console.error(err));\n        \n    }\n    prevPage = () => {\n        if (this.state.pageNumber - 1 >= 0) {\n            this.setState({currentPage: this.state.currentPage - 1});\n            fetch(`/api/questions/top?page=${this.state.currentPage}`, {method: 'GET', headers: {'content-type': 'application/json'}})\n                .then(response => response.json())\n                .then(result => {\n                    if (result.error) {\n                        this.setState({error: result.error, isLoaded: true});\n                    }\n                    this.setState({isLoaded: true, questions: result});\n                });\n        }\n        return;\n    }\n    render() {\n        let Items;\n        if (this.state.isLoaded && !this.state.error) {\n            try {\n                Items = this.state.questions.map(post => //use css to give this a class with margin 170px\n                <Postbox key = {post.id} url={`/questions/${post.id}`} author={post.author} timestamp={new Date(post.time).toLocaleString()} views={post.views} title={post.title}/>\n            );\n            }\n            catch (err) {\n                return <div style={{textAlign: 'center', border: '1px solid black', marginLeft: '170px', padding: '5%', marginRight: '10px', backgroundColor: 'rgb(150, 150, 150)'}}>\n                    <h1> No posts have been made yet!</h1>\n                    <h3> You should really do something about that </h3>\n                    <h6> please... </h6>\n                    <Link to=\"/submit\"> Make a Post</Link>\n                </div>\n            }\n        }\n        if (this.state.isLoaded && this.state.error) {\n            Items = <div style={{textAlign: 'center', border: '1px solid black', marginLeft: '170px', padding: '5%', marginRight: '10px', backgroundColor: 'rgb(150, 150, 150)'}}>\n                <h1> No posts have been made yet!</h1>\n                <h3> You should really do something about that </h3>\n                <h6> please... </h6>\n                <Link to=\"/submit\"> Make a Post</Link>\n            </div>\n        }\n        return <div>\n            {Items}\n            {this.state.questions.length > 24 && <button style={{'margin-left': '170px'}} onClick={this.nextPage}> next page </button>}\n        </div>\n    }\n}\n\nexport default TopPosts;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport QuestionRouter from './routing/questionRouter';\nimport './index.css';\nimport PostContainer from './frontPage/postContainer';\nimport PostPage from './postPage/postPage';\nimport UserPublic from './profilePage/userPublic';\nimport UserAnswers from './profilePage/userAnswers';\nimport UserQuestions from './profilePage/userQuestions';\nimport SignUp from './authentication/signUp';\nimport SignIn from './authentication/signIn'\nimport Navbar from './navigation/navbar';\nimport Sidebar from './navigation/sidebar';\nimport NewPost from './postPage/newPost';\nimport UserRouter from './routing/userRouter';\nimport TopicPage from './frontPage/topicPage';\nimport TopicRouter from './routing/topicsRouter';\nimport SignOut from './authentication/signOut';\nimport FourZeroFour from './navigation/404';\nimport TopPosts from './frontPage/topPosts';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {username: null}\n  }\n  updateAppState = state => {\n    this.setState(state);\n  }\n  componentDidMount() {\n    fetch('/api/auth/who-am-i', {method: 'GET', credentials: 'include', mode: 'cors'})\n        .then(res => res.json())\n        .then(res => {\n          this.setState({username: res.username})\n        })\n        .catch(err => console.error(err));\n  }\n  render() {\n    return (\n    <div>\n      <Navbar username={this.state.username}/>\n      <Sidebar/>\n      <Switch>\n        <Route exact path=\"/\">\n          <PostContainer/>\n        </Route>\n        <Route path=\"/top\">\n          <TopPosts/>\n        </Route>\n        <Route path=\"/most-answered\">\n          <PostContainer view=\"mostAnswered\"/>\n        </Route>\n        <Route path=\"/sign-in\">\n          <SignIn updateAppState={this.updateAppState}/>\n        </Route>\n        <Route path=\"/user\">\n          <UserPublic/>\n        </Route>\n        <Route path=\"/sign-up\">\n          <SignUp updateAppState={this.updateAppState}/>\n        </Route>\n        <Route path=\"/popular\">\n          <PostContainer view=\"popular\"/>\n        </Route>\n        <Route path=\"/submit\">\n          <NewPost username={this.state.username}/>\n        </Route>\n        <Route path=\"/questions\">\n          <QuestionRouter username={this.state.username} updateAppState={this.updateAppState}/>\n        </Route>\n        <Route path=\"/users\">\n          <UserRouter userViewing={this.state.username}/>\n        </Route> \n        <Route path=\"/topics\">\n          <TopicRouter/>\n        </Route>\n        <Route path=\"/sign-out\">\n          <SignOut updateAppState={this.updateAppState}/>\n        </Route>\n        <Route path=\"/404\">\n          <FourZeroFour/>\n        </Route>\n      </Switch>\n    </div>\n  )\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navbar from \"./navigation/navbar\";\nimport Sidebar from \"./navigation/sidebar\";\nimport App from \"./app.js\";\n\n\nReactDOM.render(<Router><App/></Router>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signinbox\":\"signIn_signinbox__1StE-\",\"innerbox\":\"signIn_innerbox__1sm2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userpublic\":\"userPublic_userpublic__2Q8H7\",\"title\":\"userPublic_title__2bzFm\",\"bio\":\"userPublic_bio__1bk3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newpost\":\"newPost_newpost__YRYwG\",\"textcontainer\":\"newPost_textcontainer__1G770\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar_navbar__3s4bB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__22MNN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerbox\":\"answerBox_answerbox__31FP_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitbox\":\"answerArea_submitbox__21x09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"questionarea\":\"questionarea_questionarea__3soUP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postpage\":\"postPage_postpage__1tNfA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postbox\":\"postbox_postbox__3DoV-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilenavbar\":\"profileNavbar_profilenavbar__3aUno\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"useranswers\":\"userAnswers_useranswers__1dWx0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fourzerofour\":\"fourzerofour_fourzerofour__1ZPSX\"};"],"sourceRoot":""}